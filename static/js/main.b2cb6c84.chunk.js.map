{"version":3,"sources":["assets/404.jpg","assets/tmdb.svg","assets/404cast.webp","components/SearchBar.js","API.js","components/HomePage.js","components/Header.js","components/MovieCard.js","components/Cast.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","onChange","this","props","aria-label","style","padding","display","width","background","outline","border","color","type","placeholder","Component","PERSON_URL","POPULAR_MOVIES_URL","API_KEY","HomePage","state","movies","isLoading","searchQuery","pageNum","searchMovies","e","searchVariable","target","value","trim","document","getElementById","innerText","sessionStorage","getItem","JSON","parse","setState","console","log","fetch","then","data","json","jsondata","results","setItem","stringify","catch","err","error","fetchMoreMovies","loadMoreBtn","page","addDefaultSrcToImg","onError","src","image404","renderedMoviesList","map","movie","Col","key","id","xs","sm","md","lg","to","Card","bg","text","className","Img","variant","alt","title","poster_path","Body","Title","fontSize","Text","vote_average","Container","margin","CardGroup","Button","onClick","size","block","Header","gridTemplateColumns","textAlign","userSelect","height","verticalAlign","fontWeight","textDecoration","href","rel","tmdblogo","MovieCard","cast","backdrop","budget","genres","homepage","overview","release","runtime","status","tagline","vote","addDefaultSrcToCastImg","image404cast","movieID","match","params","backdrop_path","release_date","genresArr","genre","name","join","castArray","item","profile_path","loading","borderRadius","justifyContent","alignItems","paddingTop","IMG_BASE_URL","ImgOverlay","CardDeck","App","birth","dept","img","bio","personID","birthday","known_for_department","biography","moviesArr","maxWidth","basename","exact","path","component","Cast","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b2cb6c84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.c35f1447.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb.02a9430b.svg\";","module.exports = __webpack_public_path__ + \"static/media/404cast.762ddd08.webp\";","import React, { Component } from \"react\";\r\n// import { SearchAlt } from \"styled-icons/boxicons-regular\";\r\n\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    const { onChange } = this.props;\r\n    return (\r\n      <div>\r\n        <input\r\n          aria-label=\"Search Movies\"\r\n          style={{\r\n            padding: \"0.5rem 1rem\",\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            background: \"rgba(0, 0, 0, 0.9)\",\r\n            outline: \"none\",\r\n            border: \"2px solid black\",\r\n            color: \"#bbbbbb\"\r\n          }}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// TMDb API\r\n\r\n// Get all the configuration info here -\r\n// https://api.themoviedb.org/3/configuration?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/search/movie?api_key=df6f6314c5440cba12e1c99403e78dc3&query=\r\n\r\n// https://api.themoviedb.org/3/movie/299534/credits?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/movie/299534/images?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/movie/299534?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/person/585d55ce92514123b300c1f9?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\nexport const PERSON_URL = \"https://api.themoviedb.org/3/person/\";\r\n\r\nexport const POPULAR_MOVIES_URL =\r\n  \"https://api.themoviedb.org/3/movie/popular?api_key=\";\r\nexport const SEARCH_MOVIES_URL =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=\";\r\n\r\nexport const MOVIE_CREDITS_URL = \"https://api.themoviedb.org/3/movie/\";\r\n\r\nexport const APPEND_CREDITS = \"/credits?api_key=\";\r\n\r\nexport const SEARCH_QUERY = \"&query=\";\r\n\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const API_KEY = \"df6f6314c5440cba12e1c99403e78dc3\";\r\nexport const PAGE_NUM = \"&page=\";\r\n\r\nexport const IMG_BASE_URL = \"https://image.tmdb.org/t/p/\";\r\nexport const ORIGINAL_IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n// export const BACKDROP_SIZE = \"original\";\r\n// export const BACKDROP_SIZE = \"w500\";\r\nexport const BACKDROP_SIZE = \"w1280\";\r\nexport const LOGO_SIZE = \"w92\";\r\nexport const POSTER_SIZE = \"w342\";\r\n\r\n// const configuration = {\r\n//   images: {\r\n//     base_url: \"http://image.tmdb.org/t/p/\",\r\n//     secure_base_url: \"https://image.tmdb.org/t/p/\",\r\n//     backdrop_sizes: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n//     logo_sizes: [\"w45\", \"w92\", \"w154\", \"w185\", \"w300\", \"w500\", \"original\"],\r\n//     poster_sizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n//     profile_sizes: [\"w45\", \"w185\", \"h632\", \"original\"],\r\n//     still_sizes: [\"w92\", \"w185\", \"w300\", \"original\"]\r\n//   }\r\n// };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { CardGroup, Card, Container, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image404 from \"../assets/404.jpg\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport {\r\n  POPULAR_MOVIES_URL,\r\n  SEARCH_MOVIES_URL,\r\n  SEARCH_QUERY,\r\n  PAGE_NUM,\r\n  API_KEY,\r\n  IMG_BASE_URL,\r\n  POSTER_SIZE\r\n} from \"../API\";\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    isLoading: true,\r\n    searchQuery: \"\",\r\n    pageNum: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movies } = this.state;\r\n\r\n    if (sessionStorage.getItem(\"BaseState\")) {\r\n      let state = JSON.parse(sessionStorage.getItem(\"BaseState\"));\r\n      this.setState({ ...state });\r\n      console.log(\"from session storage\");\r\n    } else {\r\n      fetch(`${POPULAR_MOVIES_URL}${API_KEY}${PAGE_NUM}${this.state.pageNum}`)\r\n        .then(data => data.json())\r\n        .then(jsondata => {\r\n          this.setState(\r\n            {\r\n              isLoading: false,\r\n              movies: [...movies, ...jsondata.results]\r\n            },\r\n            () => {\r\n              // Remember state for the next mount if we´re not in a search view\r\n              sessionStorage.setItem(\"BaseState\", JSON.stringify(this.state));\r\n              console.log(\"saved data to session storage\");\r\n            }\r\n          );\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n  }\r\n\r\n  searchMovies = e => {\r\n    // const { movies } = this.state;\r\n\r\n    // console.log(e.target.value);\r\n\r\n    let searchVariable = e.target.value.trim();\r\n\r\n    if (searchVariable === \"\") {\r\n      document.getElementById(\"popular-or-results\").innerText =\r\n        \"Popular Movies\";\r\n\r\n      document.getElementById(\"load-more-btn\").style.display = \"block\";\r\n\r\n      if (sessionStorage.getItem(\"BaseState\")) {\r\n        let state = JSON.parse(sessionStorage.getItem(\"BaseState\"));\r\n        this.setState({ ...state });\r\n        console.log(\"from session storage\");\r\n      } else {\r\n        fetch(`${POPULAR_MOVIES_URL}${API_KEY}`)\r\n          .then(data => data.json())\r\n          .then(jsondata => {\r\n            this.setState(\r\n              {\r\n                movies: jsondata.results\r\n              },\r\n              () => {\r\n                // Remember state for the next mount if we are not in a search view\r\n                if (searchVariable === \"\") {\r\n                  sessionStorage.setItem(\r\n                    \"BaseState\",\r\n                    JSON.stringify(this.state)\r\n                  );\r\n                  console.log(\"saved data to session storage\");\r\n                }\r\n              }\r\n            );\r\n          })\r\n          .catch(err => console.error(err));\r\n      }\r\n    } else {\r\n      fetch(`${SEARCH_MOVIES_URL}${API_KEY}${SEARCH_QUERY}${searchVariable}`)\r\n        .then(data => data.json())\r\n        .then(jsondata => {\r\n          this.setState({\r\n            movies: jsondata.results,\r\n            pageNum: 1\r\n          });\r\n        })\r\n        .catch(err => console.error(err));\r\n\r\n      document.getElementById(\"popular-or-results\").innerText = \"Results\";\r\n\r\n      document.getElementById(\"load-more-btn\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  fetchMoreMovies = () => {\r\n    const { movies, pageNum } = this.state;\r\n    const loadMoreBtn = document.getElementById(\"load-more-btn\");\r\n    loadMoreBtn.innerText = \"Load More Movies\";\r\n    fetch(`${POPULAR_MOVIES_URL}${API_KEY}${PAGE_NUM}${pageNum + 1}`)\r\n      .then(data => data.json())\r\n      .then(jsondata => {\r\n        this.setState({\r\n          movies: [...movies, ...jsondata.results],\r\n          pageNum: jsondata.page\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        loadMoreBtn.innerText = \"Couldn't Load Movies\";\r\n      });\r\n\r\n    // console.log(this.state.pageNum);\r\n  };\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404;\r\n    console.log(\"Image not found!\");\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    const renderedMoviesList = movies.map(movie => {\r\n      return (\r\n        <Col key={movie.id} xs={12} sm={6} md={4} lg={3}>\r\n          {/* <Link to={{ pathname: `/${movie.id}`, movieName: `${movie.title}` }}> */}\r\n          <Link to={\"/movie/\" + movie.id}>\r\n            <Card bg=\"dark\" text=\"white\" className=\"mb-3\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                alt={movie.title}\r\n                src={`${IMG_BASE_URL}${POSTER_SIZE}${movie.poster_path}`}\r\n                onError={this.addDefaultSrcToImg}\r\n              />\r\n\r\n              <Card.Body>\r\n                <Card.Title style={{ fontSize: \"1rem\" }}>\r\n                  {movie.title}\r\n                </Card.Title>\r\n                {/* <Card.Text>{movie.release_date}</Card.Text> */}\r\n                <Card.Text>Rating: {movie.vote_average}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <h2\r\n          style={{\r\n            margin: \"1rem\"\r\n          }}\r\n        >\r\n          Search\r\n        </h2>\r\n        <SearchBar onChange={this.searchMovies} />\r\n        <h2\r\n          id=\"popular-or-results\"\r\n          style={{\r\n            margin: \"1rem\"\r\n          }}\r\n        >\r\n          Popular Movies\r\n        </h2>\r\n\r\n        <CardGroup>{renderedMoviesList}</CardGroup>\r\n\r\n        <Button\r\n          id=\"load-more-btn\"\r\n          onClick={this.fetchMoreMovies}\r\n          variant=\"dark\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Load More Movies\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport tmdblogo from \"../assets/tmdb.svg\";\r\nimport { Movie } from \"styled-icons/boxicons-solid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"\"\r\n        style={{\r\n          background: \"rgba(0, 0, 0, 0.9)\",\r\n          color: \"#eeeeee\"\r\n        }}\r\n      >\r\n        <header\r\n          className=\"App-header\"\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"auto auto\"\r\n            // gridTemplateRows: \"auto auto\"\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              textAlign: \"left\",\r\n              color: \"#dddddd\"\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                fontSize: \"1.75rem\",\r\n                textAlign: \"left\",\r\n                display: \"inline-block\",\r\n                margin: \"0.5rem 1rem\",\r\n                userSelect: \"none\"\r\n              }}\r\n              id=\"title\"\r\n            >\r\n              <span>\r\n                <Movie\r\n                  id=\"flickk-icon\"\r\n                  style={{\r\n                    height: \"2rem\",\r\n                    verticalAlign: \"bottom\"\r\n                  }}\r\n                />\r\n              </span>\r\n              Flickk\r\n            </h1>\r\n          </Link>\r\n          <span\r\n            style={{\r\n              textAlign: \"right\",\r\n              verticalAlign: \"super\",\r\n              margin: \"0.5rem 1rem\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            id=\"tmdb-logo\"\r\n          >\r\n            <a\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"#eeeeee\",\r\n                userSelect: \"none\"\r\n              }}\r\n              href=\"http://www.themoviedb.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Powered by{\" \"}\r\n              <img\r\n                src={tmdblogo}\r\n                alt=\"www.themoviedb.org\"\r\n                style={{\r\n                  height: \"2.5rem\",\r\n                  verticalAlign: \"middle\"\r\n                }}\r\n              />\r\n            </a>\r\n          </span>\r\n        </header>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport image404 from \"../assets/404.jpg\";\r\nimport image404cast from \"../assets/404cast.webp\";\r\n\r\nimport {\r\n  MOVIE_CREDITS_URL,\r\n  IMG_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  APPEND_CREDITS,\r\n  API_KEY\r\n} from \"../API\";\r\n\r\nimport { Card, Container, CardDeck } from \"react-bootstrap\";\r\n\r\nclass MovieCard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    cast: [],\r\n    backdrop: \"\",\r\n    budget: \"\",\r\n    genres: [],\r\n    homepage: \"\",\r\n    overview: \"\",\r\n    release: \"\",\r\n    runtime: \"\",\r\n    status: \"\",\r\n    tagline: \"\",\r\n    vote: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieID } = this.props.match.params;\r\n\r\n    fetch(`${MOVIE_CREDITS_URL}${movieID}${APPEND_CREDITS}${API_KEY}`)\r\n      .then(data => data.json())\r\n      .then(json =>\r\n        this.setState({\r\n          cast: json.cast\r\n        })\r\n      )\r\n      .catch(err => console.error(err));\r\n\r\n    fetch(`${MOVIE_CREDITS_URL}${movieID}?api_key=${API_KEY}`)\r\n      .then(data => data.json())\r\n      .then(json =>\r\n        this.setState({\r\n          title: json.title,\r\n          backdrop: json.backdrop_path,\r\n          budget: json.budget,\r\n          genres: json.genres,\r\n          homepage: json.homepage,\r\n          overview: json.overview,\r\n          release: json.release_date,\r\n          runtime: json.runtime,\r\n          status: json.status,\r\n          tagline: json.tagline,\r\n          vote: json.vote_average\r\n        })\r\n      );\r\n  }\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404;\r\n    console.log(\"Image not found!\");\r\n  };\r\n\r\n  addDefaultSrcToCastImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404cast;\r\n    console.log(\"Cast image not found!\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      backdrop,\r\n      budget,\r\n      genres,\r\n      homepage,\r\n      overview,\r\n      release,\r\n      runtime,\r\n      status,\r\n      tagline,\r\n      vote,\r\n      cast\r\n    } = this.state;\r\n\r\n    console.log(cast);\r\n\r\n    const gen = genres.map(genre => genre.name);\r\n    const genresArr = gen.join(\", \");\r\n\r\n    const castArray = cast.map(item => {\r\n      return (\r\n        <Link key={item.id} to={\"/cast/\" + item.id}>\r\n          {/* <img\r\n            src={`https://image.tmdb.org/t/p/w45/${item.profile_path}`}\r\n            alt={item.name}\r\n          />\r\n          <p>{item.name}</p> */}\r\n          <Card>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={`https://image.tmdb.org/t/p/w154${item.profile_path}`}\r\n              loading=\"lazy\"\r\n              onError={this.addDefaultSrcToCastImg}\r\n              className=\"cast-images\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Text>{item.name}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className=\"container-div\"\r\n        id=\"movie-card-div\"\r\n        style={{\r\n          padding: \"2rem 1rem\",\r\n          background: \"#222222\",\r\n          borderRadius: 0\r\n        }}\r\n      >\r\n        <Container\r\n          id=\"movie-card-container\"\r\n          style={{\r\n            background: \"#222222\",\r\n            borderRadius: 0\r\n          }}\r\n        >\r\n          <Card className=\"bg-dark text-white make-text-selectable\">\r\n            <Card.Title\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                background: \"rgba(0, 0, 0, 0.8)\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                // color: \"#cccccc\",\r\n                color: \"#01D277\",\r\n                margin: 0,\r\n                paddingTop: \"0.5rem\"\r\n              }}\r\n              className=\"align-middle text-center pb-2 m-0\"\r\n            >\r\n              {title}\r\n            </Card.Title>\r\n            <Card.Text\r\n              style={{\r\n                color: \"#cccccc\",\r\n                background: \"rgba(0, 0, 0, 0.8)\",\r\n                fontSize: \"1rem\"\r\n              }}\r\n              className=\"m-0 pb-2\"\r\n            >\r\n              {tagline}\r\n            </Card.Text>\r\n\r\n            <Card.Img\r\n              src={IMG_BASE_URL + BACKDROP_SIZE + \"/\" + backdrop}\r\n              alt={title}\r\n              onError={this.addDefaultSrcToImg}\r\n            />\r\n\r\n            <Card.ImgOverlay />\r\n            <Card.Body>\r\n              <Card.Text className=\"overview-text\">{overview}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Text className=\"green-text\">\r\n                Status: {status} | Release: {release} | Runtime: {runtime} mins\r\n              </Card.Text>\r\n              <Card.Text className=\"green-text\">\r\n                Rating: {vote} | Genres: {genresArr}\r\n              </Card.Text>\r\n              <Card.Text className=\"green-text\">Budget: ${budget}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card.Body>\r\n            <p id=\"cast-heading\">Cast</p>\r\n            {/* <ul id=\"cast-list\">{castArray}</ul> */}\r\n            <CardDeck id=\"cast-list\">{castArray}</CardDeck>\r\n          </Card.Body>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={homepage}>\r\n            Visit Movie Website\r\n          </a>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default withRouter(MovieCard);\r\nexport default MovieCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport image404 from \"../assets/404.jpg\";\r\n\r\nimport { PERSON_URL, ORIGINAL_IMG_URL, API_KEY } from \"../API\";\r\nexport default class App extends Component {\r\n  state = {\r\n    name: \"\",\r\n    birth: \"\",\r\n    dept: \"\",\r\n    img: \"\",\r\n    bio: \"\",\r\n    movies: []\r\n  };\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404;\r\n    console.log(\"Image not found!\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    // fetch actors\r\n    const { personID } = this.props.match.params;\r\n\r\n    // fetch personal details\r\n    fetch(`${PERSON_URL}${personID}?api_key=${API_KEY}`)\r\n      .then(data => data.json())\r\n      .then(json =>\r\n        // console.log(json)\r\n        this.setState({\r\n          name: json.name,\r\n          birth: json.birthday || \"Unknown\",\r\n          dept: json.known_for_department || \"Unknown\",\r\n          bio: json.biography || \"Information Not Found!\",\r\n          img: json.profile_path\r\n        })\r\n      )\r\n      .catch(err => console.error(err));\r\n\r\n    // fetch movies they have worked in\r\n    fetch(`${PERSON_URL}${personID}/movie_credits?api_key=${API_KEY}`)\r\n      .then(data => data.json())\r\n      .then(json =>\r\n        this.setState({\r\n          movies: json.cast\r\n        })\r\n      )\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    // const { personID } = this.props.match.params;\r\n    const { name, birth, dept, img, bio, movies } = this.state;\r\n\r\n    const moviesArr = movies.map(movie => {\r\n      return (\r\n        <Link key={movie.id} to={\"/movie/\" + movie.id}>\r\n          <span>{movie.title},&nbsp;</span>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          className=\"container-div\"\r\n          style={{\r\n            padding: \"1rem 0\",\r\n            background: \"#222222\",\r\n            borderRadius: 0\r\n          }}\r\n        >\r\n          <Container>\r\n            <Card\r\n              style={{\r\n                maxWidth: \"500px\",\r\n                background: \"#000000\",\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n                border: \"2px solid black\"\r\n              }}\r\n            >\r\n              <Card.Img\r\n                style={{\r\n                  borderRadius: 0,\r\n                  height: \"auto\",\r\n                  width: \"100%\",\r\n                  maxWidth: \"300px\"\r\n                }}\r\n                src={`${ORIGINAL_IMG_URL}${img}`}\r\n                onError={this.addDefaultSrcToImg}\r\n              />\r\n              <Card.Body style={{ border: \"2px solid #cccccc\" }}>\r\n                <Card.Title>{name}</Card.Title>\r\n                <Card.Text>Birthday: {birth}</Card.Text>\r\n                <Card.Text>Work: {dept}</Card.Text>\r\n                <Card.Text>Biography: {bio}</Card.Text>\r\n              </Card.Body>\r\n              <Card.Body>Movies: {moviesArr}</Card.Body>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"../App.css\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport Header from \"./Header\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Cast from \"./Cast\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <Fragment>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/movie/:movieID\" component={MovieCard} />\r\n            <Route exact path=\"/cast/:personID\" component={Cast} />\r\n          </Switch>\r\n        </Fragment>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\r\n1. Browse trending and popular movies, and search all movies by title\r\n\r\n2. View relevant details of a particular movie including but not limited to title, overview, release year, runtime and cast members\r\n\r\n3. View details of specific actor or actress including but not limited to name, bio, birth date and list of movies in which have worked\r\n\r\n4. Ensure proper navigation between screens\r\n\r\n5. Feel free to use CSS frameworks like Bootstrap, Material UI or any other CSS framework\r\n\r\n6. Feel free to use client-side state management libraries such as Flux or Redux\r\n\r\n7. Add relevant code comments and modularise the code properly\r\n\r\n8. Use git source control system and make nice commits with proper commit messages\r\n\r\n*/\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}