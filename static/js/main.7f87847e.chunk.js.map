{"version":3,"sources":["assets/404.jpg","assets/movie404.jpg","assets/404cast.webp","assets/tmdb.svg","components/SearchBar.js","API.js","components/HomePage.js","components/Header.js","components/MovieCard.js","components/Cast.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","onChange","this","props","aria-label","style","padding","display","margin","width","background","outline","border","color","type","placeholder","Component","PERSON_URL","POPULAR_MOVIES_URL","API_KEY","HomePage","state","movies","isLoading","searchQuery","pageNum","searchMovies","e","searchVariable","target","value","trim","document","getElementById","innerText","sessionStorage","getItem","JSON","parse","setState","console","log","fetch","then","response","status","json","Error","statusText","jsondata","results","setItem","stringify","catch","err","error","fetchMoreMovies","loadMoreBtn","page","addDefaultSrcToImg","onError","src","image404","renderedMoviesList","map","movie","Col","key","id","xs","sm","md","lg","to","Card","bg","text","className","Img","variant","alt","title","poster_path","Body","Title","fontSize","Text","vote_average","Container","CardGroup","Button","onClick","size","block","Header","gridTemplateColumns","textAlign","userSelect","height","verticalAlign","fontWeight","textDecoration","href","rel","tmdblogo","MovieCard","cast","backdrop","budget","genres","homepage","overview","release","runtime","tagline","vote","numOfCastItemsToShow","onScroll","window","innerHeight","scrollY","body","offsetHeight","length","loadCastOnScroll","movie404img","addDefaultSrcToCastImg","cast404img","prevState","addEventListener","movieID","match","params","name","profile_path","backdrop_path","release_date","removeEventListener","genresArr","genre","join","newCastArray","slice","loading","borderRadius","justifyContent","alignItems","IMG_BASE_URL","ImgOverlay","backgroundColor","aria-hidden","CardDeck","App","birth","dept","img","bio","personID","birthday","known_for_department","biography","moviesLen","moviesArr","index","maxWidth","borderTop","basename","exact","path","component","Cast","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f87847e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.c35f1447.jpg\";","module.exports = __webpack_public_path__ + \"static/media/movie404.bdd79ffe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404cast.762ddd08.webp\";","module.exports = __webpack_public_path__ + \"static/media/tmdb.02a9430b.svg\";","import React, { Component } from \"react\";\r\n// import { SearchAlt } from \"styled-icons/boxicons-regular\";\r\n\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    const { onChange } = this.props;\r\n    return (\r\n      <div>\r\n        <input\r\n          aria-label=\"Search Movies\"\r\n          style={{\r\n            padding: \"0.5rem 1rem\",\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n            width: \"calc(100% - 1.75rem)\",\r\n            background: \"rgba(0, 0, 0, 0.9)\",\r\n            outline: \"none\",\r\n            border: \"2px solid #339933\",\r\n            color: \"#bbbbbb\"\r\n          }}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// TMDb API\r\n\r\n// Get all the configuration info here -\r\n// https://api.themoviedb.org/3/configuration?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/search/movie?api_key=df6f6314c5440cba12e1c99403e78dc3&query=\r\n\r\n// https://api.themoviedb.org/3/movie/299534/credits?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/movie/299534/images?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/movie/299534?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\n// https://api.themoviedb.org/3/person/585d55ce92514123b300c1f9?api_key=df6f6314c5440cba12e1c99403e78dc3\r\n\r\nexport const PERSON_URL = \"https://api.themoviedb.org/3/person/\";\r\n\r\nexport const POPULAR_MOVIES_URL =\r\n  \"https://api.themoviedb.org/3/movie/popular?api_key=\";\r\nexport const SEARCH_MOVIES_URL =\r\n  \"https://api.themoviedb.org/3/search/movie?api_key=\";\r\n\r\nexport const MOVIE_CREDITS_URL = \"https://api.themoviedb.org/3/movie/\";\r\n\r\nexport const APPEND_CREDITS = \"/credits?api_key=\";\r\n\r\nexport const SEARCH_QUERY = \"&query=\";\r\n\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const API_KEY = \"df6f6314c5440cba12e1c99403e78dc3\";\r\nexport const PAGE_NUM = \"&page=\";\r\n\r\nexport const IMG_BASE_URL = \"https://image.tmdb.org/t/p/\";\r\nexport const ORIGINAL_IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n// export const BACKDROP_SIZE = \"w500\";\r\nexport const BACKDROP_SIZE = \"w1280\";\r\n// export const BACKDROP_SIZE_ORIGINAL = \"original\";\r\nexport const LOGO_SIZE = \"w92\";\r\n// export const POSTER_SIZE = \"w342\";\r\n// changed poster_size to w300 to fix audit properly size images issue\r\n// if there are any problems, change it back to w342.\r\nexport const POSTER_SIZE = \"w300\";\r\n\r\n// const configuration = {\r\n//   images: {\r\n//     base_url: \"http://image.tmdb.org/t/p/\",\r\n//     secure_base_url: \"https://image.tmdb.org/t/p/\",\r\n//     backdrop_sizes: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n//     logo_sizes: [\"w45\", \"w92\", \"w154\", \"w185\", \"w300\", \"w500\", \"original\"],\r\n//     poster_sizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n//     profile_sizes: [\"w45\", \"w185\", \"h632\", \"original\"],\r\n//     still_sizes: [\"w92\", \"w185\", \"w300\", \"original\"]\r\n//   }\r\n// };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { CardGroup, Card, Container, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport image404 from \"../assets/404.jpg\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport {\r\n  POPULAR_MOVIES_URL,\r\n  SEARCH_MOVIES_URL,\r\n  SEARCH_QUERY,\r\n  PAGE_NUM,\r\n  API_KEY,\r\n  IMG_BASE_URL,\r\n  POSTER_SIZE\r\n} from \"../API\";\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    isLoading: true,\r\n    searchQuery: \"\",\r\n    pageNum: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movies } = this.state;\r\n\r\n    if (sessionStorage.getItem(\"BaseState\")) {\r\n      let state = JSON.parse(sessionStorage.getItem(\"BaseState\"));\r\n      this.setState({ ...state });\r\n      console.log(\"from session storage\");\r\n    } else {\r\n      fetch(`${POPULAR_MOVIES_URL}${API_KEY}${PAGE_NUM}${this.state.pageNum}`)\r\n        .then(response => {\r\n          if (response.status >= 200 && response.status <= 299) {\r\n            return response.json();\r\n          } else {\r\n            throw Error(response.statusText, \"failed to fetch\");\r\n          }\r\n        })\r\n        .then(jsondata => {\r\n          this.setState(\r\n            {\r\n              isLoading: false,\r\n              movies: [...movies, ...jsondata.results]\r\n            },\r\n            () => {\r\n              // Remember state for the next mount if we´re not in a search view\r\n              sessionStorage.setItem(\"BaseState\", JSON.stringify(this.state));\r\n              console.log(\"saved data to session storage\");\r\n            }\r\n          );\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n  }\r\n\r\n  searchMovies = e => {\r\n    // const { movies } = this.state;\r\n\r\n    // console.log(e.target.value);\r\n\r\n    let searchVariable = e.target.value.trim();\r\n\r\n    if (searchVariable === \"\") {\r\n      document.getElementById(\"popular-or-results\").innerText =\r\n        \"Trending Movies\";\r\n\r\n      document.getElementById(\"load-more-btn\").style.display = \"block\";\r\n\r\n      if (sessionStorage.getItem(\"BaseState\")) {\r\n        let state = JSON.parse(sessionStorage.getItem(\"BaseState\"));\r\n        this.setState({ ...state });\r\n        console.log(\"from session storage\");\r\n      } else {\r\n        fetch(`${POPULAR_MOVIES_URL}${API_KEY}`)\r\n          .then(response => {\r\n            if (response.status >= 200 && response.status <= 299) {\r\n              return response.json();\r\n            } else {\r\n              throw Error(\r\n                response.statusText,\r\n                \"failed to fetch trending movies\"\r\n              );\r\n            }\r\n          })\r\n          .then(jsondata => {\r\n            this.setState(\r\n              {\r\n                movies: jsondata.results\r\n              },\r\n              () => {\r\n                // Remember state for the next mount if we are not in a search view\r\n                if (searchVariable === \"\") {\r\n                  sessionStorage.setItem(\r\n                    \"BaseState\",\r\n                    JSON.stringify(this.state)\r\n                  );\r\n                  console.log(\"saved data to session storage\");\r\n                }\r\n              }\r\n            );\r\n          })\r\n          .catch(err => console.error(err));\r\n      }\r\n    } else {\r\n      fetch(`${SEARCH_MOVIES_URL}${API_KEY}${SEARCH_QUERY}${searchVariable}`)\r\n        .then(response => {\r\n          if (response.status >= 200 && response.status <= 299) {\r\n            return response.json();\r\n          } else {\r\n            throw Error(response.statusText, \"failed to fetch\");\r\n          }\r\n        })\r\n        .then(jsondata => {\r\n          this.setState({\r\n            movies: jsondata.results,\r\n            pageNum: 1\r\n          });\r\n        })\r\n        .catch(err => console.error(err));\r\n\r\n      document.getElementById(\"popular-or-results\").innerText = \"Results\";\r\n\r\n      document.getElementById(\"load-more-btn\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  fetchMoreMovies = () => {\r\n    const { movies, pageNum } = this.state;\r\n    const loadMoreBtn = document.getElementById(\"load-more-btn\");\r\n    loadMoreBtn.innerText = \"Load More Movies\";\r\n    fetch(`${POPULAR_MOVIES_URL}${API_KEY}${PAGE_NUM}${pageNum + 1}`)\r\n      .then(response => {\r\n        if (response.status >= 200 && response.status <= 299) {\r\n          return response.json();\r\n        } else {\r\n          throw Error(response.statusText, \"failed to fetch movies\");\r\n        }\r\n      })\r\n      .then(jsondata => {\r\n        this.setState({\r\n          movies: [...movies, ...jsondata.results],\r\n          pageNum: jsondata.page\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        loadMoreBtn.innerText = \"Couldn't Load Movies\";\r\n      });\r\n\r\n    // console.log(this.state.pageNum);\r\n  };\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404;\r\n    console.log(\"Image not found!\");\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    // console.log(movies);\r\n\r\n    const renderedMoviesList = movies.map(movie => {\r\n      return (\r\n        <Col key={movie.id} xs={12} sm={6} md={4} lg={3}>\r\n          {/* <Link to={{ pathname: `/${movie.id}`, movieName: `${movie.title}` }}> */}\r\n          <Link to={\"/movie/\" + movie.id}>\r\n            <Card bg=\"dark\" text=\"white\" className=\"mb-3\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                alt={movie.title}\r\n                src={`${IMG_BASE_URL}${POSTER_SIZE}${movie.poster_path}`}\r\n                onError={this.addDefaultSrcToImg}\r\n              />\r\n\r\n              <Card.Body>\r\n                <Card.Title style={{ fontSize: \"1rem\" }}>\r\n                  {movie.title}\r\n                </Card.Title>\r\n                {/* <Card.Text>{movie.release_date}</Card.Text> */}\r\n                <Card.Text>Rating: {movie.vote_average}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container id=\"homepage-container\">\r\n        <h2\r\n          style={{\r\n            margin: \"1rem\"\r\n          }}\r\n        >\r\n          Search\r\n        </h2>\r\n        <SearchBar onChange={this.searchMovies} />\r\n        <h2\r\n          id=\"popular-or-results\"\r\n          style={{\r\n            margin: \"1rem\"\r\n          }}\r\n        >\r\n          Trending Movies\r\n        </h2>\r\n\r\n        <CardGroup>{renderedMoviesList}</CardGroup>\r\n\r\n        <Button\r\n          id=\"load-more-btn\"\r\n          onClick={this.fetchMoreMovies}\r\n          // variant=\"dark\"\r\n          style={{\r\n            background: \"#0f0f0f\",\r\n            border: \"2px solid #339933\",\r\n            margin: \"0.5rem auto\",\r\n            width: \"calc(100% - 1.75rem)\"\r\n          }}\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Load More Movies\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport tmdblogo from \"../assets/tmdb.svg\";\r\nimport { Movie } from \"styled-icons/boxicons-solid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"\"\r\n        style={{\r\n          background: \"rgba(0, 0, 0, 0.9)\",\r\n          color: \"#eeeeee\"\r\n        }}\r\n      >\r\n        <header\r\n          className=\"App-header\"\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"auto auto\"\r\n            // gridTemplateRows: \"auto auto\"\r\n          }}\r\n        >\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              textAlign: \"left\",\r\n              color: \"#dddddd\"\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                fontSize: \"1.75rem\",\r\n                textAlign: \"left\",\r\n                display: \"inline-block\",\r\n                margin: \"0.5rem 1rem\",\r\n                userSelect: \"none\"\r\n              }}\r\n              id=\"title\"\r\n            >\r\n              <span>\r\n                <Movie\r\n                  id=\"flickk-icon\"\r\n                  style={{\r\n                    height: \"2rem\",\r\n                    verticalAlign: \"bottom\"\r\n                  }}\r\n                />\r\n              </span>\r\n              Flickk\r\n            </h1>\r\n          </Link>\r\n          <span\r\n            style={{\r\n              textAlign: \"right\",\r\n              verticalAlign: \"super\",\r\n              margin: \"0.5rem 1rem\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n            id=\"tmdb-logo\"\r\n          >\r\n            <a\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"#eeeeee\",\r\n                userSelect: \"none\"\r\n              }}\r\n              href=\"http://www.themoviedb.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Powered by{\" \"}\r\n              <img\r\n                src={tmdblogo}\r\n                alt=\"www.themoviedb.org\"\r\n                style={{\r\n                  height: \"2.5rem\",\r\n                  verticalAlign: \"middle\"\r\n                }}\r\n              />\r\n            </a>\r\n          </span>\r\n        </header>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport movie404img from \"../assets/movie404.jpg\";\r\nimport cast404img from \"../assets/404cast.webp\";\r\n\r\nimport {\r\n  MOVIE_CREDITS_URL,\r\n  IMG_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  APPEND_CREDITS,\r\n  API_KEY\r\n} from \"../API\";\r\n\r\nimport { Card, Container, CardDeck } from \"react-bootstrap\";\r\n// import CastList from \"./CastList\";\r\n\r\n// let castsArray = [];\r\nclass MovieCard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    cast: [],\r\n    backdrop: \"\",\r\n    budget: \"\",\r\n    genres: [],\r\n    homepage: \"\",\r\n    overview: \"\",\r\n    release: \"\",\r\n    runtime: \"\",\r\n    status: \"\",\r\n    tagline: \"\",\r\n    vote: \"\",\r\n    numOfCastItemsToShow: 10\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.onScroll, false);\r\n\r\n    const { movieID } = this.props.match.params;\r\n\r\n    fetch(`${MOVIE_CREDITS_URL}${movieID}${APPEND_CREDITS}${API_KEY}`)\r\n      .then(response => {\r\n        if (response.status >= 200 && response.status <= 299) {\r\n          return response.json();\r\n        } else {\r\n          throw Error(response.statusText, \"failed to fetch cast\");\r\n        }\r\n      })\r\n      .then(json =>\r\n        this.setState({\r\n          // destructured to store only required info\r\n          cast: json.cast.map(({ id, name, profile_path }) => ({\r\n            id,\r\n            name,\r\n            profile_path\r\n          }))\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n    // changed to console.log from error to fix audit scores\r\n    // besides, its just to log that image wasn't available in tmdb anyway\r\n\r\n    fetch(`${MOVIE_CREDITS_URL}${movieID}?api_key=${API_KEY}`)\r\n      .then(response => {\r\n        if (response.status >= 200 && response.status <= 299) {\r\n          return response.json();\r\n        } else {\r\n          throw Error(response.statusText, \"failed to fetch movie details\");\r\n        }\r\n      })\r\n      .then(json =>\r\n        this.setState({\r\n          title: json.title,\r\n          backdrop: json.backdrop_path,\r\n          budget: json.budget,\r\n          genres: json.genres,\r\n          homepage: json.homepage,\r\n          overview: json.overview,\r\n          release: json.release_date,\r\n          runtime: json.runtime,\r\n          status: json.status,\r\n          tagline: json.tagline,\r\n          vote: json.vote_average\r\n        })\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.onScroll, false);\r\n  }\r\n\r\n  onScroll = () => {\r\n    // console.log(\"window.innerHeight\", window.innerHeight);\r\n    // console.log(\"window.scrollY\", window.scrollY);\r\n    // console.log(\"document.body.offsetHeight\", document.body.offsetHeight);\r\n\r\n    if (\r\n      window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 &&\r\n      this.state.cast.length\r\n    ) {\r\n      this.loadCastOnScroll();\r\n    }\r\n  };\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = movie404img;\r\n    console.log(\"Movie poster image not found!\");\r\n  };\r\n\r\n  addDefaultSrcToCastImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = cast404img;\r\n    console.log(\"Cast image not found!\");\r\n  };\r\n\r\n  loadCastOnScroll = () => {\r\n    this.setState(prevState => ({\r\n      numOfCastItemsToShow: prevState.numOfCastItemsToShow + 10\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      backdrop,\r\n      budget,\r\n      genres,\r\n      homepage,\r\n      overview,\r\n      release,\r\n      runtime,\r\n      status,\r\n      tagline,\r\n      vote,\r\n      cast,\r\n      numOfCastItemsToShow\r\n    } = this.state;\r\n\r\n    // console.log(backdrop);\r\n\r\n    const gen = genres.map(genre => genre.name);\r\n    const genresArr = gen.join(\", \");\r\n\r\n    const newCastArray = cast\r\n      .slice(0, numOfCastItemsToShow)\r\n      .map(({ id, name, profile_path }) => {\r\n        return (\r\n          <Link key={id} to={\"/cast/\" + id}>\r\n            <Card>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={\r\n                  profile_path\r\n                    ? `https://image.tmdb.org/t/p/w154${profile_path}`\r\n                    : cast404img\r\n                }\r\n                width=\"154px\"\r\n                height=\"auto\"\r\n                style={{\r\n                  width: \"154px\",\r\n                  height: \"auto\"\r\n                }}\r\n                alt={name}\r\n                loading=\"lazy\"\r\n                onError={this.addDefaultSrcToCastImg}\r\n                className=\"cast-images\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Text>{name}</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        );\r\n      });\r\n\r\n    return (\r\n      <div\r\n        className=\"container-div\"\r\n        id=\"movie-card-div\"\r\n        style={{\r\n          padding: \"2rem 1rem\",\r\n          background: \"#222222\",\r\n          borderRadius: 0\r\n        }}\r\n      >\r\n        <Container\r\n          id=\"movie-card-container\"\r\n          style={{\r\n            background: \"#222222\",\r\n            borderRadius: 0\r\n          }}\r\n        >\r\n          <Card\r\n            className=\"bg-dark text-white make-text-selectable\"\r\n            style={{\r\n              border: \"none\"\r\n            }}\r\n          >\r\n            <Card.Title\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                background: \"rgba(0, 0, 0, 0.8)\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                color: \"#01D277\"\r\n              }}\r\n              className=\"align-middle text-center p-3 m-0\"\r\n            >\r\n              {title}\r\n            </Card.Title>\r\n            {tagline && (\r\n              <Card.Text\r\n                style={{\r\n                  color: \"#cccccc\",\r\n                  background: \"rgba(0, 0, 0, 0.8)\",\r\n                  fontSize: \"1rem\"\r\n                }}\r\n                className=\"m-0 pb-2\"\r\n              >\r\n                {tagline}\r\n              </Card.Text>\r\n            )}\r\n\r\n            <Card.Img\r\n              src={\r\n                backdrop\r\n                  ? `${IMG_BASE_URL + BACKDROP_SIZE + backdrop}`\r\n                  : movie404img\r\n              }\r\n              alt={title}\r\n              onError={this.addDefaultSrcToImg}\r\n            />\r\n\r\n            <Card.ImgOverlay />\r\n            <Card.Body style={{ backgroundColor: \"#121212\" }}>\r\n              <Card.Text className=\"overview-text\">{overview}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              {\r\n                (status,\r\n                release,\r\n                runtime ? (\r\n                  <Card.Text className=\"green-text\">\r\n                    {/* Status: {status} | Release: {release} | Runtime: {runtime}{\" \"} */}\r\n                    Status: {status}\r\n                    <span aria-hidden=\"true\" className=\"circle\">\r\n                      &#9900;\r\n                    </span>\r\n                    Release Date: {release}\r\n                    <span aria-hidden=\"true\" className=\"circle\">\r\n                      &#9900;\r\n                    </span>\r\n                    Runtime: {runtime} mins\r\n                  </Card.Text>\r\n                ) : (\r\n                  <Card.Text className=\"green-text\">\r\n                    Status: Unkown\r\n                    <span aria-hidden=\"true\" className=\"circle\">\r\n                      &#9900;\r\n                    </span>\r\n                    Release Date: Unknown\r\n                    <span aria-hidden=\"true\" className=\"circle\">\r\n                      &#9900;\r\n                    </span>\r\n                    Runtime: Unknown\r\n                  </Card.Text>\r\n                ))\r\n              }\r\n              {genresArr ? (\r\n                <Card.Text className=\"green-text\">\r\n                  Genres: {genresArr}\r\n                </Card.Text>\r\n              ) : (\r\n                <Card.Text className=\"green-text\">Genres: Unknown</Card.Text>\r\n              )}\r\n              {budget ? (\r\n                <Card.Text className=\"green-text\">Budget: ${budget}</Card.Text>\r\n              ) : (\r\n                <Card.Text className=\"green-text\">Budget: Unknown</Card.Text>\r\n              )}\r\n              {vote ? (\r\n                <Card.Text className=\"green-text\">Rating: {vote}</Card.Text>\r\n              ) : (\r\n                <Card.Text className=\"green-text\">Rating: Unknown</Card.Text>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card.Body>\r\n            <p id=\"cast-heading\">Cast</p>\r\n            <CardDeck id=\"cast-list\">{newCastArray}</CardDeck>\r\n          </Card.Body>\r\n\r\n          {homepage && (\r\n            <a\r\n              className=\"visit-movie-website\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={homepage}\r\n            >\r\n              Visit Movie Website\r\n            </a>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default withRouter(MovieCard);\r\nexport default MovieCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport image404 from \"../assets/404.jpg\";\r\n\r\nimport { PERSON_URL, ORIGINAL_IMG_URL, API_KEY } from \"../API\";\r\nexport default class App extends Component {\r\n  state = {\r\n    name: \"\",\r\n    birth: \"\",\r\n    dept: \"\",\r\n    img: \"\",\r\n    bio: \"\",\r\n    movies: []\r\n  };\r\n\r\n  addDefaultSrcToImg = e => {\r\n    // prevent infinite callbacks when image404 fails\r\n    e.target.onError = null;\r\n    e.target.src = image404;\r\n    console.log(\"Image not found!\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    // fetch actors\r\n    const { personID } = this.props.match.params;\r\n\r\n    // fetch personal details\r\n    fetch(`${PERSON_URL}${personID}?api_key=${API_KEY}`)\r\n      .then(response => {\r\n        if (response.status >= 200 && response.status <= 299) {\r\n          return response.json();\r\n        } else {\r\n          throw Error(response.statusText, \"failed to fetch cast details\");\r\n        }\r\n      })\r\n      .then(json =>\r\n        // console.log(json)\r\n        this.setState({\r\n          name: json.name,\r\n          birth: json.birthday || \"Unknown\",\r\n          dept: json.known_for_department || \"Unknown\",\r\n          bio: json.biography || \"Information unavailable.\",\r\n          img: json.profile_path\r\n        })\r\n      )\r\n      // log instead of error for better audit scores\r\n      .catch(err => console.log(err));\r\n\r\n    // fetch movies they have worked in\r\n\r\n    fetch(`${PERSON_URL}${personID}/movie_credits?api_key=${API_KEY}`)\r\n      .then(response => {\r\n        if (response.status >= 200 && response.status <= 299) {\r\n          return response.json();\r\n        } else {\r\n          throw Error(response.statusText, \"failed to fetch movies\");\r\n        }\r\n      })\r\n      .then(json =>\r\n        this.setState({\r\n          // get only title and id fields from cast array\r\n          movies: json.cast.map(({ title, id }) => ({ title, id }))\r\n        })\r\n      )\r\n      // log instead of error for better audit scores\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    // const { personID } = this.props.match.params;\r\n    const { name, birth, dept, img, bio, movies } = this.state;\r\n    // console.log(img);\r\n\r\n    const moviesLen = movies.length;\r\n\r\n    const moviesArr = movies.map((movie, index) => {\r\n      // add a period after last movie\r\n      if (index === moviesLen - 1) {\r\n        return (\r\n          <Link className=\"mmm\" key={movie.id} to={\"/movie/\" + movie.id}>\r\n            <span>{movie.title}.</span>\r\n          </Link>\r\n        );\r\n      }\r\n      return (\r\n        <Link className=\"mmm\" key={movie.id} to={\"/movie/\" + movie.id}>\r\n          <span>{movie.title},&nbsp;</span>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          className=\"container-div\"\r\n          style={{\r\n            padding: \"1rem 0\",\r\n            background: \"#222222\",\r\n            borderRadius: 0\r\n          }}\r\n        >\r\n          <Container>\r\n            <Card\r\n              style={{\r\n                maxWidth: \"500px\",\r\n                background: \"#000000\",\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n                border: \"2px solid black\"\r\n              }}\r\n            >\r\n              <Card.Img\r\n                style={{\r\n                  borderRadius: 0,\r\n                  height: \"auto\",\r\n                  width: \"100%\",\r\n                  maxWidth: \"300px\"\r\n                }}\r\n                src={img ? `${ORIGINAL_IMG_URL}${img}` : image404}\r\n                alt={name}\r\n                onError={this.addDefaultSrcToImg}\r\n              />\r\n              <Card.Body style={{ border: \"2px solid #cccccc\" }}>\r\n                <Card.Title>\r\n                  <span className=\"green-text\">{name}</span>\r\n                </Card.Title>\r\n\r\n                <Card.Text>\r\n                  <span className=\"green-text\">Birthday:</span> {birth}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  <span className=\"green-text\">Work:</span> {dept}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  <span className=\"green-text\">Biography:</span> {bio}\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Body\r\n                style={{ border: \"2px solid #cccccc\", borderTop: \"none\" }}\r\n              >\r\n                <span className=\"green-text\">Movies:</span> {moviesArr}\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"../App.css\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport Header from \"./Header\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Cast from \"./Cast\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <Fragment>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/movie/:movieID\" component={MovieCard} />\r\n            <Route exact path=\"/cast/:personID\" component={Cast} />\r\n          </Switch>\r\n        </Fragment>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}